#метод append. Предназначен для добавления элемента в конец списка.

age = [1, 2, 3]
age.append ("hero")
print(age)

# с помощью функции len можно посчитать количество элементов в списке. len начинает счииать не с нуля, а с 1

age = [14, 16, 68, "hero", 47.09]
print(len(age))

# метод insert позволяет вставить элемент в любое место списка, все остальные элементы двигаются вправо

age = ["toy", 12, 167.07, "hero"]
index = 0
age.insert (index, "rik")
index = 3
age.insert (index, 66)
print(age)

# можно не писать index, а писать короче:
age = ["toy", 12, 167.07, "hero"]
age.insert (0, "rik")
age.insert (3, 66)
print(age)

# с помощтю метода index, можно найти первое упоминания элемента в списке и вывести его индекс. Если элемента нет в списке, система выдаст ошибку

age = ["wer", 23, 45 , 7, 89, 57, 7]
print(age.index(7))

#Есть еще несколько полезных функций и методов для работы со списками:

#max(list): возвращает элемент списка с наибольшим значением (нужно не забывать, что может быть несовместимость типов(str, int, float))

age = [2, 23, 45 , 7, 89, 57, 7]
print (max(age))
day = ["aa", "ab", "agh"]
print (max(day))


#min(list): возвращает элемент списка с наименьшим значением (нужно не забывать, что может быть несовместимость типов(str, int, float))

age = [2, 23, 45 , 7, 89, 57, 7]
print (min(age))
day = ["aa", "ab", "agh"]
print (min(day))

#list.count(obj): возвращает количество упоминаний элемента в списке

age = [2, 7, 23, 45 , 7, 89, 57, 7]
print (age.count(7))


#list.remove(obj): удаляет объект из списка( если одинаковых объектов несколько, удаляет только первый)
age = [56, 56, 78, 56, 9, 1]
age.remove(56)
print (age)


#list.reverse(): располагает элементы в обратном порядке

age = ["dog", 1, 56.894, 01.7, "sos"]
age.reverse()
print (age)










