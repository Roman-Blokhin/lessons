# Функции (def, lambda, return)

# https://www.youtube.com/watch?v=-vvQ_-JGzrM&list=PL0lO_mIqDDFXgfuxOEDTCwsWmKezOaDTu&index=12

# def - создает новую функцию, hero - название функции (может быть любое), в скобках прописываются нужные элементы. return - возвращает нам наши элементы, можно сделать действие с ними

# 1
def hero (a, b):
    return a + b

print (hero ('hello', " !")) # мы задаем значение нашим элементам
print (hero (2, 7))

# 2
# можно задать переменную для значений
def toy (z, v):
    res = (z * v)
    return res 
    
print (toy (4, 5))

# функции возвращают все что угодно - списки, словари, кортежи и т.д.

# 3
def zum (x):
    def add (c):
        return x + c
    return add
test = zum (100) # передаем значение переменной х
print (test (200)) # передаем значение переменной а
print ("")

# 4
# если нам ничего не нужно возвращать ставим значение pass для нашей функции

def ter ():
    pass
print (ter())

# 5
# передача аргументов по умолчанию
# если мы сразу передаем значение аргумента в нашей функции(должен быть в конце, то при выводе результата мы не указываем новое значение)
def qw (r, w, y = 2):
    return r + w + y
print (qw(1, 4))

# если мы укажем новое значение, для уже переданного по умолчанию аргумента, то значение поменяется на новое

def qw2 (r2, w2, y2 = 2):
    return r2 + w2 + y2
print (qw2 (1, 4, 56))
print ()

# 6
# В функцию можно передавать неограниченное кол-во параметров
# если ставим символ * - передается кортеж
def tyu (*args):
    return args
print (tyu("roma", 45.109, 6, "игрушка"))

# а если поставить ** - то выдастся словарь

def rot (**args):
    return args
print (rot (a = 23, n = 78, countries = ("USA", "Russia")))
print (rot(countries = "USA"))
print ()

# 7
# lambda - анонимные функции. тоже самое что и функция def, только может выполнять всего лишь 1 действие и пишется в одну строчку

mop = lambda o, i : o * i # задаем аргументы и сразу значения
print (mop (2, 4))
print (mop ("roma ", 4))

# или

print ((lambda l, v : l - v) (45, 67)) # можно писать в 1 строчку

# можно также передавать кортежи или словари

ri = lambda *args : args
print (ri (2, 45.09, "toy"))

re = lambda **args : args
print (re(xx = "Италия", dd = ("Франция", "Москва"), ll = "Германия"))








































